
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to get caregiver profile
    function getCaregiverProfile() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    // Helper function to check if the user is the assigned caregiver for a patient
    function isCaregiver(patientId) {
      let caregiverProfile = getCaregiverProfile();
      return caregiverProfile.role == 'caregiver' && caregiverProfile.monitoringPatientId == patientId;
    }
    
    // User Profiles
    match /users/{userId} {
      // Anyone can create a user profile during sign-up
      allow create: if request.auth != null;
      
      // A user can read their own profile.
      // A caregiver can read the profile of the patient they are monitoring.
      allow read: if isOwner(userId) || isCaregiver(userId);
      
      // A user can update their own profile.
      allow update: if isOwner(userId);
      
      // Users cannot delete their profiles through the app
      allow delete: if false;
    }

    // Generic rule for patient-owned data (appointments, vitals, etc.)
    match /{collection}/{docId} {
        // Allow read/write if the user is the owner OR the assigned caregiver
        allow read, write: if (isOwner(resource.data.userId) || isCaregiver(resource.data.userId)) && collection != 'users';
        
        // Allow creation if the user is the owner
        allow create: if (isOwner(request.resource.data.userId)) && collection != 'users';
    }
  }
}
