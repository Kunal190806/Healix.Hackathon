rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the document.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users can be created by anyone (for sign-up), but only the user themselves
    // can read or update their own profile. No one can delete a user profile.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if request.auth != null;
      allow delete: if false;
    }

    // For any other collection (appointments, vitals, prescriptions, etc.),
    // the user must be authenticated and the 'userId' field in the document
    // must match their own UID. This allows them to create, read, update,
    // and delete their own data.
    // This single rule covers all collections by using a wildcard.
    match /{collection}/{docId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
